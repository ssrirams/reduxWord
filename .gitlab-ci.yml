image: node:18

stages:
  - install
  - test
  - lint
  - build
  - security

include:
  - template: Security/SAST.gitlab-ci.yml



# Install Node modules and Java
install_dependencies:
  stage: install
  script:
    - echo "Installing dependencies..."
    - apt-get update && apt-get install -y openjdk-17-jdk
    - npm install
  cache:
    paths:
      - node_modules/

# lint:
#   stage: lint
#   script:
#     - echo "Running ESLint..."
#     - npm install
#     - npx eslint .


# # Run tests
# test:
#   stage: test
#   script:
#     - echo "Running tests..."
#     - npm install
#     - npm test
#   cache:
#     paths:
#       - node_modules/

# Build Android APK
variables:
  ANDROID_SDK_ROOT: "/sdk"
  ANDROID_HOME: "/sdk"
  JAVA_HOME: "/usr/lib/jvm/java-17-openjdk-amd64"
  

build_android:
  stage: build
  before_script:
    - echo "Installing required packages..."
    - apt-get update && apt-get install -y openjdk-17-jdk wget unzip

    - echo "Creating SDK directory..."
    - mkdir -p /sdk

    - echo "Downloading Android SDK tools..."
    - wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip

    - echo "Unzipping SDK tools..."
    - unzip -q cmdline-tools.zip -d /sdk/cmdline-tools

    - echo "Organizing cmdline-tools into latest/..."
    - mkdir -p /sdk/cmdline-tools/latest
    - find /sdk/cmdline-tools -mindepth 1 -maxdepth 1 ! -name 'latest' -exec mv {} /sdk/cmdline-tools/latest/ \;

    - echo "Installing SDK packages..."
    - yes | /sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=/sdk "platform-tools" "platforms;android-33" "build-tools;33.0.2" || { echo "sdkmanager failed"; exit 1; }

  script:
    - echo "Installing Node dependencies..."
    - npm install || { echo "npm install failed"; exit 1; }

    - echo "Building Android release..."
    - cd android
    - ./gradlew assembleRelease || { echo "Gradle build failed"; exit 1; }
    - cd ..

  cache:
    paths:
      - node_modules/
      - android/.gradle






