image: node:18

stages:
  - install
  - test
  - lint
  - build
  - security

include:
  - template: Security/SAST.gitlab-ci.yml



# Install Node modules and Java
install_dependencies:
  stage: install
  script:
    - echo "Installing dependencies..."
    - apt-get update && apt-get install -y openjdk-17-jdk
    - npm install
  cache:
    paths:
      - node_modules/

# lint:
#   stage: lint
#   script:
#     - echo "Running ESLint..."
#     - npm install
#     - npx eslint .


# # Run tests
# test:
#   stage: test
#   script:
#     - echo "Running tests..."
#     - npm install
#     - npm test
#   cache:
#     paths:
#       - node_modules/

# Build Android APK
variables:
  ANDROID_SDK_ROOT: "/sdk"
  ANDROID_HOME: "/sdk"
  JAVA_HOME: "/usr/lib/jvm/java-17-openjdk-amd64"
  

build_android:
  stage: build
  before_script:
    - apt-get update && apt-get install -y openjdk-17-jdk wget unzip
    - export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
    - mkdir -p /sdk
    - export ANDROID_SDK_ROOT=/sdk
    - wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
    - unzip -q cmdline-tools.zip -d /sdk/tmp-tools
    - mkdir -p /sdk/cmdline-tools/latest
    - mv /sdk/tmp-tools/cmdline-tools/* /sdk/cmdline-tools/latest/
    - yes | /sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=/sdk --licenses # Automatically accepts licenses
    - /sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=/sdk "platform-tools" "platforms;android-33" "build-tools;33.0.2"
    - chmod +x android/gradlew

  script:
    - export ANDROID_SDK_ROOT=/sdk
    - npm install
    - cd android
    - ./gradlew assembleRelease
    - test -f app/build/outputs/apk/release/app-release.apk && echo "✅ APK built successfully!" || { echo "❌ APK build failed"; exit 1; }

  artifacts:
    paths:
      - android/app/build/outputs/apk/release/app-release.apk

  only:
    - main







